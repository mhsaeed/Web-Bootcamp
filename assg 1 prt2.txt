Section 3:
Search for a Number in an Array;

using System;

class SearchNumberInArray
{
    static void Main()
    {
        int[] numbers = { 10, 20, 30, 40, 50 };
        Console.Write("Enter a number to search for: ");
        int n = Convert.ToInt32(Console.ReadLine());

        bool found = false;
        foreach (int num in numbers)
        {
            if (num == n)
            {
                found = true;
                break;
            }
        }

        if (found)
            Console.WriteLine($"{n} was found in the array.");
        else
            Console.WriteLine($"{n} was not found in the array.");
    }
}
Check if a String is a Palindrome:

using System;

class PalindromeCheck
{
    static bool IsPalindrome(string str)
    {
        int left = 0;
        int right = str.Length - 1;

        while (left < right)
        {
            if (str[left] != str[right])
                return false;

            left++;
            right--;
        }

        return true;
    }

    static void Main()
    {
        Console.Write("Enter a string: ");
        string input = Console.ReadLine();

        if (IsPalindrome(input))
            Console.WriteLine($"{input} is a palindrome.");
        else
            Console.WriteLine($"{input} is not a palindrome.");
    }
}
Find Largest and Smallest Number in an Array:

using System;
using System.Linq;

class FindMinMaxInArray
{
    static void Main()
    {
        int[] numbers = { 15, 6, 42, 8, 17, 3 };

        int min = numbers.Min();
        int max = numbers.Max();

        Console.WriteLine($"Smallest number: {min}");
        Console.WriteLine($"Largest number: {max}");
    }
}
Print a Right Angle Triangle:
csharp
Copy code
using System;

class RightAngleTriangle
{
    static void Main()
    {
        Console.Write("Enter the height of the triangle: ");
        int height = Convert.ToInt32(Console.ReadLine());

        for (int i = 1; i <= height; i++)
        {
            for (int j = 1; j <= i; j++)
            {
                Console.Write("*");
            }
            Console.WriteLine();
        }
    }
}
Print a Pattern with Spaces:
csharp
Copy code
using System;

class PrintPattern
{
    static void Main()
    {
        Console.Write("Enter the number of rows: ");
        int n = Convert.ToInt32(Console.ReadLine());

        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= n - i; j++)
            {
                Console.Write(" ");
            }

            for (int k = 1; k <= 2 * i - 1; k++)
            {
                Console.Write("*");
            }

            Console.WriteLine();
        }
    }
}
Section 4:
Reverse a String:
csharp
Copy code
using System;

class ReverseString
{
    static void Main()
    {
        Console.Write("Enter a string: ");
        string input = Console.ReadLine();

        char[] charArray = input.ToCharArray();
        Array.Reverse(charArray);

        string reversed = new string(charArray);

        Console.WriteLine("Reversed string: " + reversed);
    }
}
Sort an Array:
csharp
Copy code
using System;

class SortArray
{
    static void Main()
    {
        Console.Write("Enter the number of elements in the array: ");
        int n = Convert.ToInt32(Console.ReadLine());

        int[] arr = new int[n];

        Console.WriteLine("Enter the elements:");
        for (int i = 0; i < n; i++)
        {
            arr[i] = Convert.ToInt32(Console.ReadLine());
        }

        Array.Sort(arr);

        Console.WriteLine("Sorted array:");
        foreach (int num in arr)
        {
            Console.Write(num + " ");
        }
    }
}
Check for Perfect Number:
csharp
Copy code
using System;

class PerfectNumberCheck
{
    static bool IsPerfect(int num)
    {
        int sum = 1; // Start with 1 as the first divisor

        for (int i = 2; i * i <= num; i++)
        {
            if (num % i == 0)
            {
                sum += i;
                if (i != num / i)
                {
                    sum += num / i;
                }
            }
        }

        return sum == num;
    }

    static void Main()
    {
        Console.Write("Enter a number: ");
        int number = Convert.ToInt32(Console.ReadLine());

        if (IsPerfect(number))
            Console.WriteLine($"{number} is a perfect number.");
        else
            Console.WriteLine($"{number} is not a perfect number.");
    }
}
Print a Pattern with Numbers:
csharp
Copy code
using System;

class PrintNumberPattern
{
    static void Main()
    {
        Console.Write("Enter the number of rows: ");
        int n = Convert.ToInt32(Console.ReadLine());

        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= n - i; j++)
            {
                Console.Write(" ");
            }

            for (int k = 1; k <= i; k++)
            {
                Console.Write(k);
            }

            Console.WriteLine();
        }
    }
}
Longest Common Subsequence of Two Strings:
csharp
Copy code
using System;

class LongestCommonSubsequence
{
    static string LongestCommonSubsequenceLength(string str1, string str2)
    {
        int m = str1.Length;
        int n = str2.Length;
        int[,] dp = new int[m + 1, n + 1];

        for (int i = 0; i <= m; i++)
        {
            for (int j = 0; j <= n; j++)
            {
                if (i == 0 || j == 0)
                    dp[i, j] = 0;
                else if (str1[i - 1] == str2[j - 1])
                    dp[i, j] = dp[i - 1, j - 1] + 1;
                else
                    dp[i, j] = Math.Max(dp[i - 1, j], dp[i, j - 1]);
            }
        }

        int index = dp[m, n];
        char[] lcs = new char[index];
        int p = m, q = n;
        
        while (p > 0 && q > 0)
        {
            if (str1[p - 1] == str2[q - 1])
            {
                lcs[index - 1] = str1[p - 1];
                p--;
                q--;
                index--;
            }
            else if (dp[p - 1, q] > dp[p, q - 1])
            {
                p--;
            }
            else
            {
                q--;
            }
        }

        return new string(lcs);
    }

    static void Main()
    {
        Console.Write("Enter the first string: ");
        string str1 = Console.ReadLine();
        Console.Write("Enter the second string: ");
        string str2 = Console.ReadLine();

        string lcs = LongestCommonSubsequenceLength(str1, str2);

        Console.WriteLine($"Longest Common Subsequence: {lcs}");
    }
}
