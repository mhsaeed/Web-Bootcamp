
CREATE DATABASE [5064_DB];
Go
USE [5064_DB];
Go
DROP TABLE Students;
DROP TABLE Courses;
-- Create the Students table

CREATE TABLE Courses (
    CourseID INT PRIMARY KEY,
    CourseName VARCHAR(100)
);

CREATE TABLE Students (
    StudentID INT IDENTITY(0,1) PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Age INT,
    CourseID INT, 
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)-- This will be a foreign key referencing the CourseID in the Courses table
);

-- Create the Courses table


INSERT INTO Courses (CourseID, CourseName)
VALUES
    (1, 'Mathematics'),
    (2, 'History'),
    (3, 'Biology'),
    (4, 'Computer Science'),
    (5, 'Art');
-- Insert data into the Students table
INSERT INTO Students ( FirstName, LastName, Age, CourseID)
VALUES
    ( 'John', 'Smith', 22, 1), -- John is enrolled in Mathematics (CourseID 1)
    ( 'Alice', 'Johnson', 19, 2),
	 ( 'Alice', 'Johnson', 19, 2), 
	  ( 'Alice', 'Johnson', 19, 2), 
	   ( 'Alice', 'Johnson', 19, 2), 
	    ( 'Alice', 'Johnson', 19, 2), 
		 ( 'Alice', 'Johnson', 19, 2),
		  ( 'Alice', 'Johnson', 19, 2), 
		   ( 'Alice', 'Johnson', 19, 2), 
		    ( 'Alice', 'Johnson', 19, 2);

 UPDATE Students
 SET Age=21
 WHERE StudentID = 9;
 
 DELETE FROM Students
 WHERE StudentID = 1;
 SELECT * FROM Students
WHERE Age > 20;
 
 SELECT Students.FirstName,Students.LastName,Courses.CourseName
 FROM Students 
 JOIN Courses ON Courses.CourseID= Students.CourseID
 WHERE Courses.CourseID= 2;
 
 SELECT COUNT(*) 
 FROM Students ;
 
  SELECT AVG(Age) 
 FROM Students; 


SELECT * FROM Students
WHERE CourseID IS NULL;

SELECT Courses.CourseName, COUNT(*) AS EnrollmentCount
FROM Courses
LEFT JOIN Students ON Courses.CourseID = Students.CourseID
GROUP BY Courses.CourseName
ORDER BY EnrollmentCount DESC


SELECT * FROM Students
WHERE Age>(SELECT AVG(Age) FROM Students);

SELECT Courses.CourseName, COUNT(Students.CourseID) AS EnrollmentCount, AVG(Students.Age) AS AVGAge
FROM Courses
LEFT JOIN Students ON Courses.CourseID = Students.CourseID
GROUP BY Courses.CourseName
ORDER BY EnrollmentCount DESC


SELECT Courses.CourseName, COUNT(Students.CourseID) AS EnrollmentCount, AVG(Age) AS AVGAge
FROM Courses
LEFT JOIN Students ON Courses.CourseID = Students.CourseID
GROUP BY Courses.CourseName
ORDER BY EnrollmentCount DESC


SELECT Courses.CourseName,Courses.CourseID
FROM Courses
LEFT JOIN Students ON Courses.CourseID = Students.CourseID
WHERE Students.StudentID IS NULL;

SELECT Courses.CourseName
FROM Courses
LEFT JOIN Students ON Courses.CourseID = Students.CourseID
WHERE Students.StudentID IS NULL;

SELECT s1.FirstName,s1.LastName
FROM Students s1
JOIN Students s2 ON S1.StudentID=s2.StudentID
WHERE s1.CourseID=2;

SELECT Students.FirstName,Students.LastName,Courses.CourseName
FROM  Courses
JOIN Students ON Students.CourseID=Courses.CourseID
WHERE Age= ( SELECT MAX(Age) FROM Students )

SELECT Students.FirstName,Students.LastName 
FROM  Courses
JOIN Students ON Students.CourseID=Courses.CourseID
WHERE Age= ( SELECT MIN(Age) FROM Students )
